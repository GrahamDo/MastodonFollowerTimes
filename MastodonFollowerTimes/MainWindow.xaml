<Window x:Class="MastodonFollowerTimes.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mastodonFollowerTimes="clr-namespace:MastodonFollowerTimes"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="865" Width="555">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="24" />
            <RowDefinition Height="24" />
            <RowDefinition Height="24" />
            <RowDefinition Height="24" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Content="Update Available" Visibility="{Binding UpdateButtonVisibility, UpdateSourceTrigger=PropertyChanged}" Click="UpdateButton_Click" />
        <Label Grid.Column="0" Grid.Row="1">Instance URL:</Label>
        <TextBox Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Margin="0,0,5,0" 
                 IsEnabled="{Binding EnableControls}"
                 Text="{Binding Settings.InstanceUrl}"></TextBox>
        <Label Grid.Column="0" Grid.Row="2">Token:</Label>
        <TextBox Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" Margin="0,0,5,0" 
                 IsEnabled="{Binding EnableControls}"
                 Text="{Binding Settings.Token}"></TextBox>
        <Label Grid.Column="0" Grid.Row="3">Account Name:</Label>
        <TextBox Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" Margin="0,0,5,0" 
                 IsEnabled="{Binding EnableControls}"
                 Text="{Binding Settings.AccountName}"></TextBox>
        <DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4">
            <Button Padding="5,0,5,0" Margin="5,5,5,0" IsDefault="True"
                    IsEnabled="{Binding EnableControls}"
                    Content="Find Best Times" HorizontalAlignment="Right" Width="Auto" Click="ProcessButton_Click"/>
            <ProgressBar Padding="5,0,5,0" Margin="5,5,5,0"
                         Visibility="{Binding InProgressVisibility}" IsIndeterminate="{Binding InProgressIsIndeterminate}"
                         Value="{Binding InProgressValue}" 
                         Maximum="{Binding InProgressMaximum}"/>
        </DockPanel>
        <TreeView Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5" Margin="0,5,0,0" 
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ItemsSource="{Binding StatusesPerHour}"
            IsEnabled="{Binding EnableControls}">
            <!-- The following style is adapted from a blog post at
                    https://leecampbell.com/2009/01/14/horizontal-stretch-on-treeviewitems/
                 It's the only way to get the tree view items to stretch to the width of the control -->
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem">
                                <StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" MinWidth="19" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press"
                                            Name="Expander">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="UIElement.Focusable" Value="false" />
                                                    <Setter Property="FrameworkElement.Width" Value="16" />
                                                    <Setter Property="FrameworkElement.Height" Value="16" />
                                                    <Setter Property="Control.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Border Padding="5,5,5,5"
                                                                    Background="#00FFFFFF"
                                                                    Width="16"
                                                                    Height="16">
                                                                    <Path Fill="#00FFFFFF"
                                                                                    Stroke="#FF989898"
                                                                                    Name="ExpandPath">
                                                                        <Path.Data>
                                                                            <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                        </Path.Data>
                                                                        <Path.RenderTransform>
                                                                            <RotateTransform Angle="135"
                                                                                CenterX="3"
                                                                                CenterY="3" />
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="UIElement.IsMouseOver"
                                                                        Value="True">
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="Shape.Stroke"
                                                                            Value="#FF1BBBFA" />
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="Shape.Fill"
                                                                            Value="#00FFFFFF" />
                                                                    </Trigger>
                                                                    <Trigger Property="ToggleButton.IsChecked"
                                                                            Value="True">
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="UIElement.RenderTransform">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="180"
                                                                                 CenterX="3"
                                                                                 CenterY="3" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="Shape.Fill"
                                                                            Value="#FF595959" />
                                                                        <Setter TargetName="ExpandPath"
                                                                            Property="Shape.Stroke"
                                                                            Value="#FF262626" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="Bd"
                                            HorizontalAlignment="Stretch"
                                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            Padding="{TemplateBinding Control.Padding}"
                                            Background="{TemplateBinding Panel.Background}"
                                            SnapsToDevicePixels="True"
                                            Grid.Column="1">
                                            <ContentPresenter x:Name="PART_Header"
                                                Content="{TemplateBinding HeaderedContentControl.Header}"
                                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                ContentSource="Header"
                                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost"
                                            Grid.Column="1"
                                            Grid.Row="1" />
                                    </Grid>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                        <Setter TargetName="ItemsHost"
                                            Property="UIElement.Visibility"
                                            Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="ItemsControl.HasItems" Value="False">
                                        <Setter TargetName="Expander"
                                            Property="UIElement.Visibility"
                                            Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                        <Setter TargetName="Bd"
                                            Property="Panel.Background"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="TextElement.Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TreeViewItem.IsSelected" Value="True" />                                            
                                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Panel.Background"
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="TextElement.Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type mastodonFollowerTimes:StatusPerTimeBlock}" 
                                          ItemsSource="{Binding StatusesPerMinute}">
                    <DockPanel>
                        <Label Content="{Binding TimeBlock}" Width="24"></Label>
                        <ProgressBar Margin="0,5,0,0"
                                     Value="{Binding StatusCount}" 
                                     Maximum="{Binding ProgressBarMaximum}"
                                     ToolTip="{Binding PercentString}"
                        />
                    </DockPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</Window>
